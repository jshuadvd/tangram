// define() gets called for each chunk generated by the first Rollup pass.
// The order the chunks are called in is controlled by the imports in bundle.js:
//
// shared.js: shared dependencies between main and worker threads
// scene_worker.js: worker thread code
// module.js: main thread code

// Once all chunks have been provided, the worker thread code is assembled,
// incorporating the shared chunk code, then turned into a blob URL which
// can be used to instantiate the worker.

var shared, worker, Tangram = {};

function define(_, chunk) {
	if (!shared) {
	    shared = chunk;
	} else if (!worker) {
	    worker = chunk;
	} else {
	    var workerBundle = 'var sharedChunk = {}; (' + shared + ')(sharedChunk); (' + worker + ')(sharedChunk);'
	    var sharedChunk = {};
	    shared(sharedChunk);
	    Tangram = chunk(sharedChunk);
	    Tangram.workerURL = window.URL.createObjectURL(new Blob([workerBundle], { type: 'text/javascript' }));
	}
}
